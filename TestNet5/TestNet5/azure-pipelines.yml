variables:
  project: 'teste-net5'
  agentPool: 'AwsHMG4'
  agentType: 'net5'
  buildConfiguration: 'Release'

stages: 
- stage: SpinUpAgent
  pool:
      name: $(agentPool)
      
  jobs: 
      - job: CreateAgent
        displayName: Spining up Agent
        steps:
          - checkout: none
          - script: | 
              curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
              chmod 700 get_helm.sh
              ./get_helm.sh
              helm repo add emberstack https://emberstack.github.io/helm-charts
              helm repo update
              helm upgrade --install --wait --namespace $(project) $(agentType)-$(Build.BuildId) --set azdoPool=$(agentPool) --set pipelines.url=https://dev.azure.com/alm-animaeducacao --set pipelines.pat=b5kqhw7adz423g7pjt77tud3tzwhapynggvz3rpdbcdj4fwmmbxa emberstack/azure-pipelines-agent
            displayName: "Create an Agent- HELM"
            
- stage: Build
  pool:
      name: $(agentPool)
      demands:
      - Agent.Name -equals $(agentType)-$(Build.BuildId)
  
  jobs: 
      - job: UseNETCore
        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk 5.0.101'
            inputs:
               packageType: 'sdk'
               version: '5.0.101'
               includePreviewVersions: true

      - job: BuildNetCore
        steps:
          - task: DotNetCoreCLI@2
            displayName: 'Build .NET Core 5'
            inputs:
               command: build
               projects: '**/*.csproj'
               arguments: '--configuration $(buildConfiguration)' # Update this to match your need)'
  
- stage: DeleteAgent
  condition: always()
  pool:
      name: $(agentPool)

  jobs:
    - job: HelmUninstall
      timeoutInMinutes: 1
      steps:
        - checkout: none
        - script: |
            helm uninstall --namespace $(project) $(agentType)-$(Build.BuildId)
          displayName: "Delete an Agent - HELM"
